[build-system]
requires = [
    "setuptools>=64",
    "wheel",
    "setuptools_scm>=7",
    "oldest-supported-numpy",
    "Cython>=0.29.32,<3.0",
]
build-backend = "setuptools.build_meta"

[project]
requires-python = ">=3.7"
name = "pentapy"
authors = [{name = "Sebastian MÃ¼ller", email = "info@geostat-framework.org"}]
readme = "README.md"
license = {text = "MIT"}
dynamic = ["version"]
description = "pentapy: A toolbox for pentadiagonal matrizes."
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: Unix",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.5",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Scientific/Engineering",
    "Topic :: Utilities",
]
dependencies = ["numpy>=1.14.5"]

[project.optional-dependencies]
scipy = ["scipy"]
umfpack = ["scikit-umfpack"]
all = [
    "scipy",
    "scikit-umfpack",
]
doc = [
    "m2r2>=0.2.8",
    "scipy>=1.1.0",
    "matplotlib>=3",
    "perfplot<0.9",
    "numpydoc>=1.1",
    "sphinx>=4",
    "sphinx-gallery>=0.8",
    "sphinx-rtd-theme>=1,<1.1",
]
test = ["pytest-cov>=3"]
check = [
  "black>=23,<24",
  "isort[colors]<6",
  "pylint<3",
]

[project.urls]
Homepage = "https://github.com/GeoStat-Framework/pentapy"
Documentation = "https://pentapy.readthedocs.io"
Source = "https://github.com/GeoStat-Framework/pentapy"
Tracker = "https://github.com/GeoStat-Framework/pentapy/issues"
Changelog = "https://github.com/GeoStat-Framework/pentapy/blob/main/CHANGELOG.md"
Conda-Forge = "https://anaconda.org/conda-forge/pentapy"

[tool.setuptools]
license-files = ["LICENSE"]

[tool.setuptools_scm]
write_to = "src/pentapy/_version.py"
write_to_template = "__version__ = '{version}'"
local_scheme = "no-local-version"
fallback_version = "0.0.0.dev0"

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 79

[tool.black]
line-length = 79
target-version = ["py37"]

[tool.coverage]
    [tool.coverage.run]
    source = ["pentapy"]
    omit = [
        "*docs*",
        "*examples*",
        "*tests*",
        "*paper*",
    ]

    [tool.coverage.report]
    exclude_lines = [
        "pragma: no cover",
        "def __repr__",
        "def __str__",
    ]

[tool.pylint]
    [tool.pylint.master]
    extension-pkg-whitelist = [
        "numpy",
        "scipy",
    ]
    ignore = "_version.py"

    [tool.pylint.message_control]
    disable = [
        "R0801",
    ]

    [tool.pylint.reports]
    output-format = "colorized"

    [tool.pylint.design]
    max-args = 20
    max-locals = 50
    max-branches = 30
    max-statements = 80
    max-attributes = 25
    max-public-methods = 75

[tool.cibuildwheel]
# Switch to using build
build-frontend = "build"
# Disable building PyPy wheels on all platforms, 32bit for py3.10/11 and musllinux builds, py3.6
skip = ["cp36-*", "pp*", "cp31*-win32", "cp31*-manylinux_i686", "*-musllinux_*"]
# Run the package tests using `pytest`
test-extras = "test"
test-command = "pytest -v {package}/tests"
# Skip trying to test arm64 builds on Intel Macs
test-skip = "*-macosx_arm64 *-macosx_universal2:arm64"
# no wheels for linux-32bit anymore for numpy>=1.22
environment = "PIP_PREFER_BINARY=1"
